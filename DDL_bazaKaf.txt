CREATE TABLE Группы
  (
    id_Группы   INTEGER NOT NULL ,
    No_Группы   CHAR (6 CHAR) ,
    Староста    INTEGER NOT NULL ,
    Профорг     INTEGER NOT NULL ,
    Студорг     INTEGER NOT NULL ,
    No_Семестра INTEGER ,
    ГодФорм     DATE
  ) ;
ALTER TABLE Группы ADD CONSTRAINT Группы_PK PRIMARY KEY ( id_Группы ) ;
CREATE TABLE ДеньНедели
  (
    id         INTEGER NOT NULL ,
    ДеньНедели VARCHAR2
    --  ERROR: VARCHAR2 size not specified
  ) ;
ALTER TABLE ДеньНедели ADD CONSTRAINT ДеньНедели_PK PRIMARY KEY ( id ) ;
CREATE TABLE Дисциплины
  (
    id_Дисцпл    INTEGER NOT NULL ,
    Наименование CHAR (15) ,
    КафДисципл   CHAR (1) ,
    СемДисципл   INTEGER ,
    КолвоЧасов   INTEGER
  ) ;
ALTER TABLE Дисциплины ADD CONSTRAINT Предмет_PK PRIMARY KEY ( id_Дисцпл ) ;
CREATE TABLE ЗамДекана
  (
    id_ЗамДекана INTEGER NOT NULL ,
    ФизЛицо      INTEGER NOT NULL ,
    Курс         INTEGER
  ) ;
ALTER TABLE ЗамДекана ADD CONSTRAINT ЗамДекана_PK PRIMARY KEY ( id_ЗамДекана ) ;
CREATE TABLE КПМ
  (
    id          INTEGER NOT NULL ,
    Тип         INTEGER NOT NULL ,
    МаксОценка  INTEGER ,
    МинОценка   INTEGER ,
    УчПлан      INTEGER NOT NULL ,
    НеделяСдачи INTEGER
  ) ;
ALTER TABLE КПМ ADD CONSTRAINT КПМ_PK PRIMARY KEY ( id ) ;
CREATE TABLE Куратор
  (
    id_Куратора INTEGER NOT NULL ,
    Группа      INTEGER NOT NULL ,
    ФизЛицо     INTEGER NOT NULL
  ) ;
ALTER TABLE Куратор ADD CONSTRAINT Куратор_PK PRIMARY KEY ( id_Куратора ) ;
CREATE TABLE НИР
  (
    id_работы    INTEGER NOT NULL ,
    Дисциплина   INTEGER NOT NULL ,
    Название     CHAR (30 CHAR) ,
    Рузультат    INTEGER ,
    Исполнитель  INTEGER NOT NULL ,
    Руководитель INTEGER NOT NULL ,
    ДатаНачала   DATE ,
    ДатаКонца    DATE
  ) ;
ALTER TABLE НИР ADD CONSTRAINT НИР_PK PRIMARY KEY ( id_работы ) ;
CREATE TABLE Оценки
  (
    "id Оценки"   INTEGER NOT NULL ,
    Оценка        INTEGER ,
    Студент       INTEGER NOT NULL ,
    Преподаватель INTEGER NOT NULL ,
    ДатаСдачи     DATE ,
    КПМ           INTEGER NOT NULL
  ) ;
ALTER TABLE Оценки ADD CONSTRAINT Оценка_PK PRIMARY KEY ( "id Оценки" ) ;
CREATE TABLE Пользователи
  (
    id_User       INTEGER NOT NULL ,
    "id _ФизЛица" INTEGER NOT NULL ,
    Роль          INTEGER NOT NULL ,
    Логин         CHAR (20 CHAR) ,
    Пароль        CHAR (20 CHAR)
  ) ;
ALTER TABLE Пользователи ADD CONSTRAINT Пользователи_PK PRIMARY KEY ( id_User ) ;
CREATE TABLE Посещаемость
  (
    id_Посещ INTEGER NOT NULL ,
    Пара     INTEGER NOT NULL ,
    Дата     DATE ,
    Студент  INTEGER NOT NULL
  ) ;
ALTER TABLE Посещаемость ADD CONSTRAINT "Посещаемость студентов_PK" PRIMARY KEY ( id_Посещ ) ;
CREATE TABLE Преподаватель
  (
    id_Препод  INTEGER NOT NULL ,
    ФизЛицо    INTEGER NOT NULL ,
    Уч_Степень VARCHAR2
    --  ERROR: VARCHAR2 size not specified
    ,
    Уч_Звание VARCHAR2
    --  ERROR: VARCHAR2 size not specified
  ) ;
ALTER TABLE Преподаватель ADD CONSTRAINT Преподаватель_PK PRIMARY KEY ( id_Препод ) ;
CREATE TABLE Приказы
  (
    id_Приказа  INTEGER NOT NULL ,
    Тип_Приказа INTEGER NOT NULL ,
    No_Приказа  INTEGER ,
    Дата        DATE ,
    ФизЛицо     INTEGER NOT NULL ,
    Утвердил    INTEGER NOT NULL
  ) ;
ALTER TABLE Приказы ADD CONSTRAINT Приказы_PK PRIMARY KEY ( id_Приказа ) ;
CREATE TABLE Расписание
  (
    id_Пары       INTEGER NOT NULL ,
    Дисциплина    INTEGER NOT NULL ,
    День_Недели   INTEGER NOT NULL ,
    Преподаватель INTEGER NOT NULL ,
    Аудитория     CHAR (5 CHAR) ,
    Числ_Знам     CHAR (1) ,
    Группа        INTEGER NOT NULL ,
    УчПлан        INTEGER NOT NULL ,
    Тип_Занятия   INTEGER NOT NULL
  ) ;
ALTER TABLE Расписание ADD CONSTRAINT Расписание_PK PRIMARY KEY ( id_Пары ) ;
CREATE TABLE Роль
  ( id_роли INTEGER NOT NULL , Наименование CHAR (15 CHAR)
  ) ;
ALTER TABLE Роль ADD CONSTRAINT Роль_PK PRIMARY KEY ( id_роли ) ;
CREATE TABLE Студент
  (
    id_Студента    INTEGER NOT NULL ,
    ФизЛицо        INTEGER NOT NULL ,
    Группа         INTEGER NOT NULL ,
    No_СтудБилета  CHAR (6 CHAR) ,
    No_Зачетки     CHAR (6 CHAR) ,
    ДатаЗачисления DATE ,
    ДатаВыпуска    DATE ,
    Мать           INTEGER NOT NULL ,
    Отец           INTEGER NOT NULL ,
    Общежитие      CHAR (1) ,
    ВоеннаяКаф     CHAR (1) ,
    Стипендия      NUMBER ,
    No_ЛичДела     INTEGER
  ) ;
ALTER TABLE Студент ADD CONSTRAINT Студент_PK PRIMARY KEY ( id_Студента ) ;
CREATE TABLE ТипМероприятия
  (
    id       INTEGER NOT NULL ,
    Название VARCHAR2
    --  ERROR: VARCHAR2 size not specified
  ) ;
ALTER TABLE ТипМероприятия ADD CONSTRAINT ТипМероприятия_PK PRIMARY KEY ( id ) ;
CREATE TABLE ТипПриказа
  ( id INTEGER NOT NULL , Тип CHAR (40)
  ) ;
ALTER TABLE ТипПриказа ADD CONSTRAINT ТипПриказа_PK PRIMARY KEY ( id ) ;
CREATE TABLE ТипыЗанятий
  ( id INTEGER NOT NULL , ТипЗанятия CHAR (15 CHAR)
  ) ;
ALTER TABLE ТипыЗанятий ADD CONSTRAINT ТипЗанятия_PK PRIMARY KEY ( id ) ;
CREATE TABLE УчебныйПлан
  (
    id_УчПлана     INTEGER NOT NULL ,
    Приказ         INTEGER NOT NULL ,
    No_Семестра    INTEGER ,
    Экзамен        CHAR (1) ,
    Дисциплина     INTEGER NOT NULL ,
    КолвоЛекций    INTEGER ,
    КолвоЛаб       INTEGER ,
    КолвоСем       INTEGER ,
    КолвоМодулей   INTEGER ,
    КурсовойПроект CHAR (1)
  ) ;
ALTER TABLE УчебныйПлан ADD CONSTRAINT УчебныйПлан_PK PRIMARY KEY ( id_УчПлана ) ;
CREATE TABLE ФизЛица
  (
    id_Физлица    INTEGER NOT NULL ,
    Фамилия       CHAR (20 CHAR) ,
    Имя           CHAR (15 CHAR) ,
    Отчество      CHAR (20 CHAR) ,
    Пол           CHAR (1 CHAR) ,
    Дата_Рождения DATE ,
    Телефон       CHAR (10 CHAR) ,
    ЭлПочта       CHAR (25 CHAR) ,
    Адр_Регистр   CHAR (30 CHAR) ,
    Адр_Прожив    CHAR (30 CHAR) ,
    Паспорт       CHAR (10 CHAR) ,
    Примечание    VARCHAR2
    --  ERROR: VARCHAR2 size not specified
  ) ;
ALTER TABLE ФизЛица ADD CONSTRAINT ФизЛица_PK PRIMARY KEY ( id_Физлица ) ;
ALTER TABLE Группы ADD CONSTRAINT ГрупСтудFK FOREIGN KEY ( Староста ) REFERENCES Студент ( id_Студента ) ;
ALTER TABLE Группы ADD CONSTRAINT ГрупСтудFK1 FOREIGN KEY ( Профорг ) REFERENCES Студент ( id_Студента ) ;
ALTER TABLE Группы ADD CONSTRAINT ГрупСтудFK2 FOREIGN KEY ( Студорг ) REFERENCES Студент ( id_Студента ) ;
ALTER TABLE ЗамДекана ADD CONSTRAINT ЗамДекФизЛицFK FOREIGN KEY ( ФизЛицо ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE КПМ ADD CONSTRAINT КПМТипМерFK FOREIGN KEY ( Тип ) REFERENCES ТипМероприятия ( id ) ;
ALTER TABLE КПМ ADD CONSTRAINT КПМУчПланFK FOREIGN KEY ( УчПлан ) REFERENCES УчебныйПлан ( id_УчПлана ) ;
ALTER TABLE Куратор ADD CONSTRAINT КурГруппыFK FOREIGN KEY ( Группа ) REFERENCES Группы ( id_Группы ) ;
ALTER TABLE Куратор ADD CONSTRAINT КурФизЛицаFK FOREIGN KEY ( ФизЛицо ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE НИР ADD CONSTRAINT НИРДисцFK FOREIGN KEY ( Дисциплина ) REFERENCES Дисциплины ( id_Дисцпл ) ;
ALTER TABLE НИР ADD CONSTRAINT НИРПреподFK FOREIGN KEY ( Руководитель ) REFERENCES Преподаватель ( id_Препод ) ;
ALTER TABLE НИР ADD CONSTRAINT НИРСтудFK FOREIGN KEY ( Исполнитель ) REFERENCES Студент ( id_Студента ) ;
ALTER TABLE Оценки ADD CONSTRAINT ОценКПМFK FOREIGN KEY ( КПМ ) REFERENCES КПМ ( id ) ;
ALTER TABLE Оценки ADD CONSTRAINT ОценПреподFK FOREIGN KEY ( Преподаватель ) REFERENCES Преподаватель ( id_Препод ) ;
ALTER TABLE Оценки ADD CONSTRAINT ОценСтудFK FOREIGN KEY ( Студент ) REFERENCES Студент ( id_Студента ) ;
ALTER TABLE Пользователи ADD CONSTRAINT ПользРольFK FOREIGN KEY ( Роль ) REFERENCES Роль ( id_роли ) ;
ALTER TABLE Пользователи ADD CONSTRAINT ПользФизЛицFK FOREIGN KEY ( "id _ФизЛица" ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE Посещаемость ADD CONSTRAINT ПосещРаспFK FOREIGN KEY ( Пара ) REFERENCES Расписание ( id_Пары ) ;
ALTER TABLE Посещаемость ADD CONSTRAINT ПосещСтудFK FOREIGN KEY ( Студент ) REFERENCES Студент ( id_Студента ) ;
ALTER TABLE Преподаватель ADD CONSTRAINT ПреподФизЛицFK FOREIGN KEY ( ФизЛицо ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE Приказы ADD CONSTRAINT ПрикТипПрикFK FOREIGN KEY ( Тип_Приказа ) REFERENCES ТипПриказа ( id ) ;
ALTER TABLE Приказы ADD CONSTRAINT ПрикФизЛицFK FOREIGN KEY ( ФизЛицо ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE Приказы ADD CONSTRAINT ПрикФизЛицFK1 FOREIGN KEY ( Утвердил ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE Расписание ADD CONSTRAINT РаспГрупFK FOREIGN KEY ( Группа ) REFERENCES Группы ( id_Группы ) ;
ALTER TABLE Расписание ADD CONSTRAINT РаспДеньНедFK FOREIGN KEY ( День_Недели ) REFERENCES ДеньНедели ( id ) ;
ALTER TABLE Расписание ADD CONSTRAINT РаспПреподFK FOREIGN KEY ( Преподаватель ) REFERENCES Преподаватель ( id_Препод ) ;
ALTER TABLE Расписание ADD CONSTRAINT РаспТипыЗанFK FOREIGN KEY ( Тип_Занятия ) REFERENCES ТипыЗанятий ( id ) ;
ALTER TABLE Расписание ADD CONSTRAINT РаспУчПланFK1 FOREIGN KEY ( УчПлан ) REFERENCES УчебныйПлан ( id_УчПлана ) ;
ALTER TABLE Студент ADD CONSTRAINT СтудГрупFK FOREIGN KEY ( Группа ) REFERENCES Группы ( id_Группы ) ;
ALTER TABLE Студент ADD CONSTRAINT СтудФизЛицFK FOREIGN KEY ( ФизЛицо ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE Студент ADD CONSTRAINT СтудФизЛицFK1 FOREIGN KEY ( Мать ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE Студент ADD CONSTRAINT СтудФизЛицFK2 FOREIGN KEY ( Отец ) REFERENCES ФизЛица ( id_Физлица ) ;
ALTER TABLE УчебныйПлан ADD CONSTRAINT УчПлДисцFK FOREIGN KEY ( Дисциплина ) REFERENCES Дисциплины ( id_Дисцпл ) ;
ALTER TABLE УчебныйПлан ADD CONSTRAINT УчПлПрикFK FOREIGN KEY ( Приказ ) REFERENCES Приказы ( id_Приказа ) ;
CREATE SEQUENCE Группы_id_Группы_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Группы_id_Группы_TRG BEFORE
  INSERT ON Группы FOR EACH ROW WHEN (NEW.id_Группы IS NULL) BEGIN :NEW.id_Группы := Группы_id_Группы_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE ДеньНедели_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ДеньНедели_id_TRG BEFORE
  INSERT ON ДеньНедели FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := ДеньНедели_id_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Дисциплины_id_Дисцпл_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Дисциплины_id_Дисцпл_TRG BEFORE
  INSERT ON Дисциплины FOR EACH ROW WHEN (NEW.id_Дисцпл IS NULL) BEGIN :NEW.id_Дисцпл := Дисциплины_id_Дисцпл_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE ЗамДекана_id_ЗамДекана_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ЗамДекана_id_ЗамДекана_TRG BEFORE
  INSERT ON ЗамДекана FOR EACH ROW WHEN (NEW.id_ЗамДекана IS NULL) BEGIN :NEW.id_ЗамДекана := ЗамДекана_id_ЗамДекана_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE КПМ_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER КПМ_id_TRG BEFORE
  INSERT ON КПМ FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := КПМ_id_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Куратор_id_Куратора_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Куратор_id_Куратора_TRG BEFORE
  INSERT ON Куратор FOR EACH ROW WHEN (NEW.id_Куратора IS NULL) BEGIN :NEW.id_Куратора := Куратор_id_Куратора_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE НИР_id_работы_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER НИР_id_работы_TRG BEFORE
  INSERT ON НИР FOR EACH ROW WHEN (NEW.id_работы IS NULL) BEGIN :NEW.id_работы := НИР_id_работы_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE "Оценки_id Оценки_SEQ" START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER "Оценки_id Оценки_TRG" BEFORE
  INSERT ON Оценки FOR EACH ROW WHEN (NEW."id Оценки" IS NULL) BEGIN :NEW."id Оценки" := "Оценки_id Оценки_SEQ".NEXTVAL;
END;
/
CREATE SEQUENCE Пользователи_id_User_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Пользователи_id_User_TRG BEFORE
  INSERT ON Пользователи FOR EACH ROW WHEN (NEW.id_User IS NULL) BEGIN :NEW.id_User := Пользователи_id_User_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Посещаемость_id_Посещ_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Посещаемость_id_Посещ_TRG BEFORE
  INSERT ON Посещаемость FOR EACH ROW WHEN (NEW.id_Посещ IS NULL) BEGIN :NEW.id_Посещ := Посещаемость_id_Посещ_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Преподаватель_id_Препод_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Преподаватель_id_Препод_TRG BEFORE
  INSERT ON Преподаватель FOR EACH ROW WHEN (NEW.id_Препод IS NULL) BEGIN :NEW.id_Препод := Преподаватель_id_Препод_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Приказы_id_Приказа_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Приказы_id_Приказа_TRG BEFORE
  INSERT ON Приказы FOR EACH ROW WHEN (NEW.id_Приказа IS NULL) BEGIN :NEW.id_Приказа := Приказы_id_Приказа_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Расписание_id_Пары_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Расписание_id_Пары_TRG BEFORE
  INSERT ON Расписание FOR EACH ROW WHEN (NEW.id_Пары IS NULL) BEGIN :NEW.id_Пары := Расписание_id_Пары_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Роль_id_роли_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Роль_id_роли_TRG BEFORE
  INSERT ON Роль FOR EACH ROW WHEN (NEW.id_роли IS NULL) BEGIN :NEW.id_роли := Роль_id_роли_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE Студент_id_Студента_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER Студент_id_Студента_TRG BEFORE
  INSERT ON Студент FOR EACH ROW WHEN (NEW.id_Студента IS NULL) BEGIN :NEW.id_Студента := Студент_id_Студента_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE ТипМероприятия_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ТипМероприятия_id_TRG BEFORE
  INSERT ON ТипМероприятия FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := ТипМероприятия_id_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE ТипПриказа_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ТипПриказа_id_TRG BEFORE
  INSERT ON ТипПриказа FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := ТипПриказа_id_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE ТипыЗанятий_id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ТипыЗанятий_id_TRG BEFORE
  INSERT ON ТипыЗанятий FOR EACH ROW WHEN (NEW.id IS NULL) BEGIN :NEW.id := ТипыЗанятий_id_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE УчебныйПлан_id_УчПлана_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER УчебныйПлан_id_УчПлана_TRG BEFORE
  INSERT ON УчебныйПлан FOR EACH ROW WHEN (NEW.id_УчПлана IS NULL) BEGIN :NEW.id_УчПлана := УчебныйПлан_id_УчПлана_SEQ.NEXTVAL;
END;
/
CREATE SEQUENCE ФизЛица_id_Физлица_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ФизЛица_id_Физлица_TRG BEFORE
  INSERT ON ФизЛица FOR EACH ROW WHEN (NEW.id_Физлица IS NULL) BEGIN :NEW.id_Физлица := ФизЛица_id_Физлица_SEQ.NEXTVAL;
END;
/
